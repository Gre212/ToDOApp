service: node-serverless-api

frameworkVersion: "3"
useDotenv: true

package:
  patterns:
    - dist/*

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-3
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:ap-northeast-3:*:*

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

resources:
  Resources:
    TasksTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          - AttributeName: CreatedAt
            AttributeType: S
          - AttributeName: State
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
          - AttributeName: CreatedAt
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: State_CreatedAt_index
            KeySchema:
              - AttributeName: State
                KeyType: HASH
              - AttributeName: CreatedAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        TableName: ${env:DYNAMODB_TABLE}

functions:
  express:
    handler: ./dist/lambda.handler
    events:
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Requested-With
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
                - Content-Type
                - X-Amz-Date
                - Authorization
                - X-Api-Key
                - X-Requested-With

plugins:
  - serverless-dynamodb-local
  - serverless-offline
